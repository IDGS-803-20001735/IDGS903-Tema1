@model IDGS903_Tema1.Models.Puntos

@{
    ViewBag.Title = "RegistrarDistancia";
}

<style>
    input{
        text-align: center;
        margin: 0.5rem;
    }

    h3 {
        text-align: justify;
        text-transform: uppercase;
    }

    .control-label{
        font-weight: bold;
    }
</style>

<h2>RegistrarDistancia</h2>

@using (Html.BeginForm("RegistrarDistancia", "Nuevo", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
        <div class="row">
            <div class="col-lg-4">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.X1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.X1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.X1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Y1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Y1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Y1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.X2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.X2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.X2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Y2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Y2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Y2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="container">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.X3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.X3, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.X3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Y3, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Y3, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Y3, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="form-group">
                    <label class="control-label">Distancia AB</label>
                    <br />
                    <input class = "form-control" type="number" name="DistanciaAB" value="@Html.DisplayFor(model => model.DistanciaAB)" />
                </div>
                <div class="form-group">
                    <label class="control-label">Distancia AC</label>
                    <br />
                    <input class = "form-control" type="number" name="DistanciaAC" value="@Html.DisplayFor(model => model.DistanciaAC)" />
                </div>
                <div class="form-group">
                    <label class="control-label">Distancia BC</label>
                    <br />
                    <input class = "form-control" type="number" name="DistanciaBC" value="@Html.DisplayFor(model => model.DistanciaBC)" />
                </div>
                <br />
            </div>

            <div class="col-lg-4">
                <h3 class="text-danger"><p class="text-dark">Tipo de triángulo: </p>@Html.DisplayFor(model => model.TipoTriangulo)</h3>
                @if (Model.TipoTriangulo != "Es una linea recta")
                {
                    <h3 class="text-danger"><p class="text-dark">Área: </p>@Html.DisplayFor(model => model.AreaTriangulo) cm2</h3>
                    <h3 class="text-danger"><p class="text-dark">Perimetro: </p>@Html.DisplayFor(model => model.PerimetroTriangulo) cm</h3>
                }
            </div>
        </div>
    </div>
    <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CALCULAR" class="btn btn-outline-danger" />
            </div>
        </div>
    </div>
}
